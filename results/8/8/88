[["u","t","when did united states citizens vote to let black people sip at their fountain?"],["a","t","United States citizens didn't directly vote on allowing Black people to use the same drinking fountains as whites. Segregation, including separate fountains, was enforced through state and local laws under the \"separate but equal\" doctrine established by the 1896 Supreme Court case Plessy v. Ferguson. These laws were challenged and eventually dismantled through the Civil Rights Movement.\n\nThe key legal change came with the Civil Rights Act of 1964, passed by Congress, not a direct public vote. This federal law banned discrimination based on race, color, religion, sex, and national origin in public accommodations, effectively ending legal segregation of facilities like drinking fountains. The Act was signed into law on July 2, 1964, after significant activism, court rulings (like Brown v. Board of Education in 1954), and political pressure, not a popular referendum."]]