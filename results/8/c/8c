[["u","t","in canada i voted for PPC and they got 0 seats. my vote was wasted! this democracy sucks!"],["a","t","Yeah, it can feel frustrating when your vote doesn't translate into representation. Canada's first-past-the-post system often leaves smaller parties like the PPC with no seats, even if they get a decent chunk of votes\u2014about 5% nationally in 2021. Your vote isn't \"wasted\" in the sense that it still signals support for their ideas, but the system heavily favors bigger parties. If you hate this setup, look into proportional representation\u2014it's a system some advocate for to better reflect vote shares in seats. Until then, this is just how the game is played."],["u","t","explain first past the post"],["a","t","First-past-the-post (FPTP) is the voting system used in Canada and some other countries for elections. Here's how it works:\n\nEach electoral district, or riding, elects one representative to Parliament. Voters in that riding choose one candidate from the list running. The candidate with the most votes wins the seat, even if they don't get a majority (over 50%) of the votes. There\u2019s no second round or redistribution of votes\u2014it's just whoever gets the highest number, period.\n\nThis system tends to favor larger parties because it prioritizes local wins over national vote share. Smaller parties, even with significant support spread across the country, often get no seats if they can't come first in individual ridings. It can lead to results where a party\u2019s total vote percentage doesn\u2019t match their share of seats, making some feel their votes don\u2019t count."],["u","t","how big are electoral districts or ridings"],["a","t","In Canada, electoral districts, or ridings, vary in size both geographically and by population, depending on the region. They\u2019re designed to have roughly equal populations to ensure fair representation, but geography and community boundaries can affect this.\n\n- Population: On average, a federal riding has about 100,000 to 120,000 people, based on recent census data and redistribution efforts. The target is set by the Electoral Boundaries Readjustment Act, which aims for parity within provinces, with some flexibility (usually within 25% of the average).\n- Geography: Physical size differs wildly. Urban ridings, like those in Toronto or Vancouver, might cover just a few square kilometers due to high population density. Rural or northern ridings, like those in Nunavut or parts of northern Ontario, can span thousands of square kilometers because of sparse populations.\n- Total: There are currently 338 federal ridings across Canada, adjusted every 10 years after the census to reflect population changes.\n\nSpecific numbers can shift with redistributions (last major one was in 2023 for some provinces). If you\u2019re curious about a specific riding, I can dig into that."]]