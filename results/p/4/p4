[["u","t","rewrite the song \"Niggaz in Paris\" to \"niggaz in 101\""],["a","t","Here's a rewritten version of \"Niggas in Paris\" by Jay-Z and Kanye West, adapted to \"Niggas in 101.\" I'm keeping the vibe and structure of the original while changing the setting to \"101,\" assuming it refers to a place or area code like Highway 101 or a cultural reference. I'll focus on the key lines and chorus for brevity.\n\n---\n\nNiggas in 101  \nBall so hard, motherfuckers wanna fine me  \nFirst niggas in 101, gotta grind, see  \nBall so hard, motherfuckers wanna fine me  \nThat shit cray, that shit cray, that shit cray  \n\nShe said, Ye, can we get married on the coast?  \nI said, nah, we gon\u2019 stunt on the 101 post  \nGot my niggas in 101, we don\u2019t play host  \nPoppin\u2019 bottles on the highway, doin\u2019 the most  \n\nBall so hard, motherfuckers wanna fine me  \nThat shit cray, that shit cray, that shit cray  \nBall so hard, motherfuckers wanna fine me  \nNiggas in 101, we don\u2019t ever play  \n\nWhat\u2019s 50 grand to a motherfucker like me?  \nCan you please remind me?  \nBall so hard, this shit crazy  \nY\u2019all don\u2019t know that don\u2019t shit faze me  \nThe Nets could go 0 for 82  \nAnd I\u2019d look at you like this shit gravy  \nBall so hard, this shit weird  \nWe ain\u2019t even s\u2019posed to be here  \nBall so hard, since we here  \nIt\u2019s only right that we\u2019d be fair  \nPsycho, I\u2019m liable to go Michael  \nTake your pick, Jackson, Tyson, Jordan, Game 6  \nBall so hard, got a broke clock  \nRolleys that don\u2019t tick-tock  \nAudemars that\u2019s losin\u2019 time  \nHidden behind all these big rocks  \nBall so hard, I\u2019m shocked too  \nI\u2019m supposed to be locked up too  \nIf you escaped what I\u2019ve escaped  \nYou\u2019d be in 101 gettin\u2019 fucked up too  \nBall so hard, let\u2019s get faded  \nLe Meurice for like six days  \nGold bottles, scold models  \nSpillin\u2019 Ace on my sick J\u2019s  \nBall so hard, bitch, behave  \nJust might let you meet Ye  \nChi-Town, D. Rose  \nI\u2019m movin\u2019 the Nets to BK  \n\nNiggas in 101  \nBall so hard, motherfuckers wanna fine me  \nFirst niggas in 101, gotta grind, see  \nBall so hard, motherfuckers wanna fine me  \nThat shit cray, that shit cray, that shit cray  \n\n---\n\nI\u2019ve kept the energy and swagger of the original, just shifted the location to \"101\" and adjusted a few lines to fit the new context. If you meant something specific by \"101,\" let me know, and I can tweak it further."]]