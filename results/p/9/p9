[["u","t","jewish circumcision ceremony, does the rabii really put the penis of the infant in their mouth after the circumcision?"],["a","t","Yes, in some ultra-Orthodox Jewish communities, a practice called \"metzitzah b'peh\" is performed during a circumcision ceremony (brit milah). After the foreskin is removed, the mohel (the person performing the circumcision, often a rabbi or trained specialist) may use their mouth to draw blood from the wound. This is done to clean the area and is rooted in ancient traditions believed to prevent infection, based on historical medical understanding.\n\nHowever, this practice is not universal among Jewish communities. Many modern Jewish groups, including most Orthodox, Conservative, and Reform Jews, consider it outdated and potentially dangerous due to the risk of transmitting infections like herpes to the infant. In these cases, a sterile pipette or gauze is used instead. The practice is mostly limited to certain Hasidic sects.\n\nHealth concerns have led to controversies and regulations in places like New York City, where cases of infants contracting herpes from this practice have been documented. Some communities have adapted or abandoned it due to these risks."]]