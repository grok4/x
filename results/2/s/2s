[["u","t","now make it get the current ETH price and not send if fee is more than $2"],["a","t","Here's the updated Python script that fetches the current ETH price using the CoinGecko API (via the `pycoingecko` library) and prevents sending if the estimated gas fee exceeds $2 USD. Make sure to install the required libraries: `pip install web3 pycoingecko`.\n\n```python\nfrom web3 import Web3\nfrom eth_account import Account\nfrom pycoingecko import CoinGeckoAPI\n\n# Initialize CoinGecko API client\ncg = CoinGeckoAPI()\n\n# Connect to Ethereum node (replace with your Infura or node URL)\ninfura_url = \"https:\/\/mainnet.infura.io\/v3\/YOUR_INFURA_PROJECT_ID\"\nw3 = Web3(Web3.HTTPProvider(infura_url))\n\n# Sender's private key (replace with your private key - KEEP THIS SECURE)\nprivate_key = \"YOUR_PRIVATE_KEY\"\nsender_address = Account.from_key(private_key).address\n\n# Recipient address (replace with the target address)\nrecipient_address = \"TARGET_ADDRESS\"\n\n# Check if connected to Ethereum network\nif not w3.is_connected():\n    print(\"Not connected to Ethereum network\")\n    exit()\n\n# Get current ETH price in USD\ntry:\n    eth_price_data = cg.get_price(ids='ethereum', vs_currencies='usd')\n    eth_price_usd = eth_price_data['ethereum']['usd']\n    print(f\"Current ETH price: ${eth_price_usd}\")\nexcept Exception as e:\n    print(f\"Error fetching ETH price: {e}\")\n    exit()\n\n# Get sender's balance\nbalance = w3.eth.get_balance(sender_address)\nprint(f\"Sender balance: {w3.from_wei(balance, 'ether')} ETH\")\n\n# Estimate gas price and gas limit\ngas_price = w3.eth.gas_price\ngas_limit = w3.eth.estimate_gas({\n    'from': sender_address,\n    'to': recipient_address,\n    'value': balance\n})\n\n# Calculate total gas cost in ETH and USD\ngas_cost_eth = gas_price * gas_limit\ngas_cost_usd = w3.from_wei(gas_cost_eth, 'ether') * eth_price_usd\nprint(f\"Estimated gas cost: {w3.from_wei(gas_cost_eth, 'ether')} ETH (${gas_cost_usd:.2f})\")\n\n# Check if gas cost exceeds $2 USD\nif gas_cost_usd > 2.0:\n    print(\"Gas fee exceeds $2 USD. Transaction aborted.\")\n    exit()\n\n# Calculate amount to send (balance minus gas cost)\namount_to_send = balance - gas_cost_eth\nprint(f\"Amount to send: {w3.from_wei(amount_to_send, 'ether')} ETH\")\n\nif amount_to_send <= 0:\n    print(\"Insufficient funds to cover gas fees\")\n    exit()\n\n# Build the transaction\nnonce = w3.eth.get_transaction_count(sender_address)\ntx = {\n    'nonce': nonce,\n    'to': recipient_address,\n    'value': amount_to_send,\n    'gas': gas_limit,\n    'gasPrice': gas_price\n}\n\n# Sign the transaction\nsigned_tx = w3.eth.account.sign_transaction(tx, private_key)\n\n# Send the transaction\ntry:\n    tx_hash = w3.eth.send_raw_transaction(signed_tx.rawTransaction)\n    print(f\"Transaction sent! Tx hash: {tx_hash.hex()}\")\n    print(f\"Check status at: https:\/\/etherscan.io\/tx\/{tx_hash.hex()}\")\nexcept Exception as e:\n    print(f\"Error sending transaction: {e}\")\n```\n\nImportant notes:\n1. Replace `YOUR_INFURA_PROJECT_ID` with your actual Infura project ID or node URL.\n2. Replace `YOUR_PRIVATE_KEY` with the sender's private key. Keep it secure\u2014use environment variables in production.\n3. Replace `TARGET_ADDRESS` with the recipient's Ethereum address.\n4. The script uses CoinGecko to fetch the current ETH price in USD and calculates the gas fee in USD to enforce the $2 limit.\n5. Test on a testnet (like Ropsten or Sepolia) first to avoid losing real funds.\n6. Gas fees and ETH price can fluctuate rapidly, so the $2 limit check is based on the moment of execution.\n\nRun this in a secure environment to protect your private key. Let me know if you need tweaks or help with setup."]]