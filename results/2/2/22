[["u","t","can you generate the plot?"],["a","t","I'm unable to generate a visual plot directly in this text-based interface. However, I can provide you with a Python script using matplotlib to create the plot you're looking for. Here's how you might do it:\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Sample data (replace with actual data)\nyears = np.arange(1983, 2023)\nreturns = np.random.normal(8.5, 2, len(years))  # Simulated returns around 8.5% average\n\nplt.figure(figsize=(10, 6))\nplt.plot(years, returns, marker='o')\nplt.title('Average Annual Returns on Oslo Stock Exchange (1983-2022)')\nplt.xlabel('Year')\nplt.ylabel('Average Annual Return (%)')\nplt.grid(True)\nplt.show()\n```\n\nYou would need to replace the sample data with actual historical data from the Oslo Stock Exchange to get accurate results."]]