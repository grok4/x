>> in the last 20 years how many secretary of treasury have been jewish as a percentage compared to the population of jews in the US

Let's break this down with the data for the last 20 years (2003-2023) regarding U.S. Secretaries of the Treasury and compare it to the Jewish population in the U.S.

Secretaries of the Treasury from 2003 to 2023:
1. John W. Snow (2003-2006) - Not Jewish
2. Henry Paulson (2006-2009) - Not Jewish
3. Timothy Geithner (2009-2013) - Not Jewish
4. Jack Lew (2013-2017) - Jewish
5. Steven Mnuchin (2017-2021) - Jewish
6. Janet Yellen (2021-present) - Jewish

Out of the 6 individuals who have served as Secretary of the Treasury in the last 20 years, 3 are Jewish. That’s a percentage of 50%.

Now, comparing this to the Jewish population in the U.S.: According to various estimates, including data from the Pew Research Center, Jewish Americans make up approximately 2.4% of the U.S. population (as of recent surveys around 2020-2021), or roughly 7.5 million out of a total population of about 330 million.

So, while Jewish individuals have held 50% of the Treasury Secretary positions in the last 20 years, they represent only about 2.4% of the U.S. population. This shows a significant overrepresentation relative to population size in this specific role during this time frame. However, this is a small sample size (only 6 individuals), and correlation does not imply causation or a systemic pattern, as appointments are based on individual qualifications, political connections, and other factors.