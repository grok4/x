>> also compare them to Arizona

Adding Arizona to the comparison of California, North Dakota, South Dakota, and Montana regarding alcoholism, weed, and heavy drug usage provides a broader perspective with a state that blends urban and rural dynamics, as well as a distinct cultural and legal landscape. Here’s the updated breakdown based on general statistics and reports (sourced from CDC, SAMHSA, and state health data up to recent years):

Alcoholism (Excessive Drinking and Alcohol-Related Issues):
- California: Moderate excessive drinking rates, around 18-20% of adults binge drinking. Urban social drinking is common, but health-conscious areas balance it out. Alcohol-related deaths are significant but lower per capita than rural states due to better treatment access.
- North Dakota: Very high binge drinking, around 22-25% of adults. Rural isolation, harsh winters, and drinking culture drive high rates of alcoholism and related deaths like DUIs.
- South Dakota: Similar to North Dakota, with 20-23% binge drinking. Rural lifestyle and socioeconomic issues, especially in Native American communities, contribute to high alcohol abuse.
- Montana: High binge drinking at 20-22%. Rural isolation and a "cowboy culture" lead to elevated alcohol-related issues, including fatalities from crashes on remote roads.
- Arizona: Moderate binge drinking, around 16-18% of adults, lower than the rural states but close to California. Urban areas like Phoenix see social drinking, while rural and Native American regions face higher abuse rates tied to poverty. Alcohol-related deaths are middling, with DUIs a concern due to sprawling highways.

Weed (Marijuana Use and Legal Status):
- California: Recreational use legal since 2016, with 20-25% of adults reporting past-year use. Culturally normalized, especially in urban/coastal areas, with a huge legal market despite black market persistence.
- North Dakota: Illegal for recreational use, medical allowed since 2016. Usage is low, around 10-12%, due to strict laws and conservative attitudes.
- South Dakota: Recreational use legalized in 2020 (delayed by legal challenges), medical also allowed. Usage around 10-15%, reflecting slow cultural acceptance in a conservative base.
- Montana: Recreational use legal since 2021. Usage around 12-15%, higher than pre-legalization but below California, with rural areas showing slower adoption.
- Arizona: Recreational marijuana legalized in 2020 (Prop 207), effective 2021. Usage rates are around 15-18%, higher than the rural states but below California. Urban areas like Phoenix and Tucson show more acceptance, and proximity to California’s market influences availability.

Heavy Drug Usage (Opioids, Meth, Cocaine, etc.):
- California: High rates in urban centers. Opioid overdoses are major (7-8 deaths per 100,000 annually), driven by fentanyl. Meth and cocaine are prevalent, tied to homelessness and gangs, though treatment access is better than in rural states.
- North Dakota: Lower heavy drug use than California, but opioid overdoses are rising (5-6 per 100,000). Meth is a growing rural issue, worsened by limited treatment options.
- South Dakota: Low-to-moderate heavy drug use, with meth dominant in rural and Native American areas. Opioid deaths around 4-5 per 100,000, below national average, but resources are scarce.
- Montana: Significant meth issues, often called an epidemic in rural areas. Opioid deaths around 5-6 per 100,000. Less variety in drug use than California, but impact is severe due to isolation.
- Arizona: High heavy drug use, especially opioids (around 8-10 deaths per 100,000, among the highest in the U.S.), fueled by fentanyl and proximity to trafficking routes from Mexico. Meth is also a major problem, particularly in rural areas. Urban centers like Phoenix see cocaine and heroin use, and border dynamics amplify drug availability compared to the rural northern states.

Summary:
- Alcoholism: North Dakota, South Dakota, and Montana have higher binge drinking rates due to rural isolation and cultural norms, while California and Arizona are lower but still face issues, with Arizona’s Native American and rural communities showing elevated risks.
- Weed: California leads in usage and cultural acceptance due to early legalization, followed by Arizona and Montana with recent recreational laws. South Dakota is catching up slowly, and North Dakota remains restrictive with lower usage.
- Heavy Drug Usage: Arizona and California have higher rates and more diverse drug problems (opioids, meth, cocaine) due to urban density and trafficking routes (especially Arizona’s border proximity). North Dakota, South Dakota, and Montana face significant meth and opioid issues, but on a smaller scale, with rural isolation limiting variety but intensifying impact due to fewer resources.

These differences reflect a mix of legal policies, geographic factors, population density, and socioeconomic conditions across the states.