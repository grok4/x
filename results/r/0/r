>> make irc art with the name phargle inside a big random an very deep artwork

```
       _______
     /         \
    /           \
   /             \
  /               \
 /                 \
/                   \
|  ________         |
| |        |        |
| |        |        |
| |        |        |
| |        |        |
| |________|        |
|                   |
|  ________         |
| |        |        |
| |        |        |
| |        |        |
| |        |        |
| |________|        |
|                   |
|  ________         |
| |        |        |
| |  PHARGLE|      |
| |        |        |
| |        |        |
| |________|        |
|                   |
|  ________         |
| |        |        |
| |        |        |
| |        |        |
| |        |        |
| |________|        |
|                   |
\                   /
 \                 /
  \               /
   \             /
    \           /
     \         /
      \_______/
```

This IRC art features the name "PHARGLE" embedded within a large and deep structure, surrounded by random elements to enhance the artwork's complexity and depth.