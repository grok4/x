[["u","t","amount of caffeine in 1 can of coca cola"],["a","t","A 12-ounce (355 ml) can of Coca-Cola contains about 34 milligrams of caffeine. Amounts can vary slightly depending on the specific product or region."],["u","t","top 10 European countries with significant Turkish and Kurdish diasporas"],["a","t","Here are the top 10 European countries with significant Turkish and Kurdish diasporas, based on population estimates and historical migration patterns:\n\n1. Germany - Hosts the largest Turkish and Kurdish diaspora in Europe, with around 3 million people of Turkish descent, including a substantial Kurdish population.\n2. France - Home to approximately 600,000-700,000 people of Turkish and Kurdish origin, with a notable Kurdish community.\n3. Netherlands - Around 400,000-500,000 individuals of Turkish descent, including Kurds, reside here.\n4. Austria - Roughly 300,000 people of Turkish origin, with a significant Kurdish presence.\n5. Belgium - About 200,000-250,000 Turkish and Kurdish individuals, with communities in cities like Brussels.\n6. Switzerland - Around 120,000-150,000 people of Turkish and Kurdish descent.\n7. United Kingdom - Approximately 100,000-150,000 Turkish and Kurdish individuals, with a strong presence in London.\n8. Sweden - Home to about 100,000 people of Turkish and Kurdish origin, with Kurds forming a notable part.\n9. Denmark - Around 60,000-70,000 Turkish and Kurdish individuals, with active cultural communities.\n10. Norway - Roughly 20,000-30,000 people of Turkish and Kurdish descent, though smaller compared to others on this list.\n\nThese numbers are approximate and vary based on sources, as some countries do not officially distinguish between Turkish and Kurdish identities in census data. Migration from Turkey, including both ethnic Turks and Kurds, largely stems from labor agreements in the mid-20th century and political asylum cases, especially for Kurds."],["u","t","what about Australia"],["a","t","Australia has a notable Turkish and Kurdish diaspora, though smaller compared to European countries. Estimates suggest there are around 60,000 to 70,000 people of Turkish descent in Australia, including both ethnic Turks and Kurds. The majority live in urban areas like Melbourne and Sydney.\n\nThe Turkish community began migrating in significant numbers during the 1960s and 1970s under labor migration agreements between Australia and Turkey. The Kurdish population, often included in these figures, includes those who arrived as refugees or asylum seekers due to political conflicts in Turkey, especially from the 1980s onward.\n\nSpecific breakdowns between Turks and Kurds are hard to come by since Australian census data typically categorizes by country of origin (Turkey) rather than ethnicity. Community organizations and cultural events, however, indicate a visible presence of both groups, with Kurdish associations often focusing on cultural preservation and political advocacy."]]