[["u","t","what's the history of Japan's Metaplanet?"],["a","t","Metaplanet is a Japanese company that has recently gained attention for its pivot toward Bitcoin investments, often dubbed as Japan's \"MicroStrategy\" due to its similar strategy of holding cryptocurrency as a treasury asset. Founded in 1999 as Venture Link, the company initially focused on business consulting and investment in startups. Over the years, it underwent several rebrands and shifts in focus, including a period as a holding company for various ventures.\n\nIn 2021, it rebranded to Metaplanet, aiming to explore new business models, including Web3 and blockchain-related projects. By 2023, under the leadership of CEO Simon Gerovich, Metaplanet announced a significant strategic shift to invest heavily in Bitcoin, viewing it as a hedge against inflation and yen depreciation. This move was influenced by Japan's economic challenges, including a weakening currency and low interest rates. The company has since acquired millions of dollars worth of Bitcoin, making it a notable player in the crypto space in Asia.\n\nHistorically, Metaplanet has had a varied track record, with periods of financial struggle and restructuring before its current crypto-focused direction. Its stock price surged following the Bitcoin investment announcements, reflecting investor interest in its new strategy."]]